@model CosmeticShopWeb.Models.ResetPasswordViewModel

@{
    ViewData["Title"] = "Сброс пароля";
}

<link rel="stylesheet" href="~/css/login.css" />

<style>
    .error-hidden {
        display: none !important;
    }

    .validation-summary-errors {
        background: #ffebee;
        border: 1px solid #f5c2c7;
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 20px;
        color: #842029;
        font-size: 14px;
    }

        .validation-summary-errors ul {
            margin: 0;
            padding-left: 20px;
        }
</style>

<div class="login-container">
    <div class="login-card">
        <h2 class="title">Сброс пароля</h2>
        <p class="subtitle">Введите новый пароль</p>

        <div asp-validation-summary="ModelOnly" class="validation-summary-errors"></div>

        <form asp-action="ResetPassword" method="post" id="resetPasswordForm">
            <input type="hidden" asp-for="Token" />

            <div class="form-group">
                <label asp-for="Password">Новый пароль</label>
                <input asp-for="Password" class="form-control" type="password"
                       placeholder="Минимум 12 символов, 1 цифра и 1 спецсимвол" />
                <span asp-validation-for="Password" class="text-danger error-hidden"></span>
            </div>

            <div class="form-group">
                <label asp-for="ConfirmPassword">Подтвердите пароль</label>
                <input asp-for="ConfirmPassword" class="form-control" type="password"
                       placeholder="Повторите пароль" />
                <span asp-validation-for="ConfirmPassword" class="text-danger error-hidden"></span>
            </div>

            <button type="submit" class="btn-submit">Сбросить пароль</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("resetPasswordForm");

            function toggleErrorField(input) {
                const fieldName = input.name;
                const errorSpan = form.querySelector(`[data-valmsg-for="${fieldName}"]`);
                if (!errorSpan) return;

                if (!$(input).valid()) {
                    errorSpan.classList.remove("error-hidden");
                } else {
                    errorSpan.classList.add("error-hidden");
                }
            }

            form.querySelectorAll("input").forEach(field => {
                field.addEventListener("blur", function () {
                    toggleErrorField(this);
                });
                field.addEventListener("input", function () {
                    toggleErrorField(this);
                });
            });
        });
    </script>
}