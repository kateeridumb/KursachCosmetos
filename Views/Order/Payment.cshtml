@model CosmeticShopWeb.Models.PaymentViewModel
@{
    ViewData["Title"] = "Оплата заказа";
    var isCard = Model.PaymentMethod == "card";
    var isSBP = Model.PaymentMethod == "sbp";
}

<link rel="stylesheet" href="~/css/payment.css" />

<div class="payment-page container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <div class="payment-card">
                <div class="payment-header">
                    <h2>💳 Оплата заказа</h2>
                    <p class="payment-method-info">
                        @if (isCard)
                        {
                            <span>Оплата банковской картой</span>
                        }
                        else if (isSBP)
                        {
                            <span>Оплата через СБП</span>
                        }
                    </p>
                </div>

                <div class="amount-section">
                    <h3 class="amount">@Model.TotalAmount.ToString("C")</h3>
                    <p class="text-muted">Сумма к оплате</p>
                </div>

                <form asp-action="ProcessPayment" method="post" class="payment-form" id="paymentForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="PaymentMethod" />
                    <input type="hidden" asp-for="OrderData" />
                    <input type="hidden" asp-for="TotalAmount" />

                    @if (isCard)
                    {
                        <div class="form-section">
                            <h4>Данные карты</h4>

                            <div class="form-group">
                                <label asp-for="CardHolderName" class="form-label">Имя держателя карты</label>
                                <input asp-for="CardHolderName" class="form-control" placeholder="IVAN IVANOV"
                                       style="text-transform: uppercase" />
                                <span asp-validation-for="CardHolderName" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="CardNumber" class="form-label">Номер карты</label>
                                <input asp-for="CardNumber" class="form-control" placeholder="0000 0000 0000 0000"
                                       maxlength="19" />
                                <span asp-validation-for="CardNumber" class="text-danger"></span>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="ExpiryDate" class="form-label">Срок действия</label>
                                        <input asp-for="ExpiryDate" class="form-control" placeholder="ММ/ГГ"
                                               maxlength="5" />
                                        <span asp-validation-for="ExpiryDate" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="CVV" class="form-label">CVV</label>
                                        <input asp-for="CVV" class="form-control" placeholder="000"
                                               maxlength="3" type="password" />
                                        <span asp-validation-for="CVV" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else if (isSBP)
                    {
                        <div class="form-section">
                            <h4>Данные для СБП</h4>
                            <div class="form-group">
                                <label asp-for="PhoneNumber" class="form-label">Номер телефона</label>
                                <input asp-for="PhoneNumber" class="form-control" placeholder="+7 (999) 999-99-99"
                                       value="@Model.PhoneNumber" />
                                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                                {
                                    <small class="text-muted">Номер заполнен автоматически из данных заказа</small>
                                }
                            </div>
                            <div class="sbp-info">
                                <p class="text-muted">
                                    На указанный номер телефона будет отправлено уведомление для подтверждения оплаты через СБП.
                                </p>
                            </div>
                        </div>
                    }

                    <div class="payment-actions">
                        <a asp-action="Checkout" class="btn btn-secondary">← Назад к оформлению</a>
                        <button type="submit" class="btn btn-primary" id="payButton">
                            ✅ Оплатить @Model.TotalAmount.ToString("C")
                        </button>
                    </div>
                </form>

                <div class="payment-security">
                    <div class="security-info">
                        <span class="security-icon">🔒</span>
                        <span>Безопасные платежи. Ваши данные защищены.</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const phoneInput = document.getElementById('PhoneNumber');
            if (phoneInput && !phoneInput.value) {
                const currentPhone = '@Model.PhoneNumber';
                if (currentPhone && currentPhone !== '') {
                    phoneInput.value = currentPhone;
                }
            }
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('paymentForm');

            const cardNumberInput = document.getElementById('CardNumber');
            if (cardNumberInput) {
                cardNumberInput.addEventListener('input', function(e) {
                    let value = e.target.value.replace(/[^0-9\s]/g, '');

                    value = value.replace(/\s/g, ''); 
                    let formattedValue = value.replace(/(\d{4})/g, '$1 ').trim();

                    e.target.value = formattedValue.substring(0, 19);
                });
            }

            const cardHolderInput = document.getElementById('CardHolderName');
            if (cardHolderInput) {
                cardHolderInput.addEventListener('input', function(e) {
                    e.target.value = e.target.value.toUpperCase();
                });
            }

            form.addEventListener('submit', function(e) {
                const submitBtn = this.querySelector('#payButton');
                submitBtn.disabled = true;
                submitBtn.innerHTML = '⏳ Обработка платежа...';
            });

            const expiryInput = document.getElementById('ExpiryDate');
            if (expiryInput) {
                expiryInput.addEventListener('input', function(e) {
                    let value = e.target.value.replace(/[^0-9]/g, '');
                    if (value.length >= 2) {
                        value = value.substring(0, 2) + '/' + value.substring(2, 4);
                    }
                    e.target.value = value.substring(0, 5);
                });
            }

            const phoneInput = document.getElementById('PhoneNumber');
            if (phoneInput) {
                phoneInput.addEventListener('input', function(e) {
                    let value = e.target.value.replace(/\D/g, '');
                    if (value.startsWith('7') || value.startsWith('8')) {
                        value = value.substring(1);
                    }
                    if (value.length > 0) {
                        value = '+7 ' + value;
                        if (value.length > 4) value = value.substring(0, 4) + ' ' + value.substring(4);
                        if (value.length > 8) value = value.substring(0, 8) + ' ' + value.substring(8);
                        if (value.length > 11) value = value.substring(0, 11) + ' ' + value.substring(11);
                    }
                    e.target.value = value.substring(0, 16);
                });
            }
        });
    </script>
}