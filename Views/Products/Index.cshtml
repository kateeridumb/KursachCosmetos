@model CosmeticShopWeb.Models.ProductListViewModel

@{
    ViewData["Title"] = Model.SelectedCategoryId > 0 ?
        $"Каталог - {Model.Categories.FirstOrDefault(c => c.IdCategory == Model.SelectedCategoryId)?.NameCa ?? "Категория"}" :
        "Каталог товаров";

    var selectedCategory = Model.Categories.FirstOrDefault(c => c.IdCategory == Model.SelectedCategoryId);
}
<link rel="stylesheet" href="~/css/products.css" />
<!-- Подключаем Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<!-- Герой секция каталога -->
<section class="catalog-hero">
    <div class="catalog-hero-content">
        <h1 class="catalog-title">
            @if (selectedCategory != null)
            {
                <text>@selectedCategory.NameCa <span class="gradient-text"><i class="@GetCategoryIcon(selectedCategory.NameCa)"></i></span></text>
            }
            else
            {
                <text>Наша <span class="gradient-text">косметика</span></text>
            }
        </h1>
        <p class="catalog-subtitle">
            @if (selectedCategory != null)
            {
                <text>@selectedCategory.DescriptionCa</text>
            }
            else
            {
                <text>Откройте для себя мир премиальной косметики от лучших брендов</text>
            }
        </p>

        @if (selectedCategory != null)
        {
            <div class="catalog-breadcrumb">
                <a asp-controller="Products" asp-action="Index"><i class="fas fa-home me-1"></i>Все товары</a>
                <span> / </span>
                <span>@selectedCategory.NameCa</span>
            </div>
        }
    </div>
    <div class="catalog-visual">
        <div class="floating-beauty">
            <div class="beauty-orb"><i class="fas fa-gem"></i></div>
            <div class="beauty-orb"><i class="fas fa-star"></i></div>
            <div class="beauty-orb"><i class="fas fa-heart"></i></div>
        </div>
    </div>
</section>

<!-- Фильтры и категории -->
<section class="filters-section">
    <div class="container">
        <div class="filters-container">
            <div class="categories-filter">
                <h3><i class="fas fa-tags me-2" style="color: #ec407a;"></i>Категории</h3>
                <div class="categories-grid">
                    <!-- Все товары -->
                    <a asp-controller="Products" asp-action="Index"
                       class="category-filter-card @(Model.SelectedCategoryId == 0 ? "active" : "")">
                        <div class="category-filter-icon">
                            <i class="fas fa-boxes" style="color: #ec407a;"></i>
                        </div>
                        <span>Все товары</span>
                        <span class="category-count">@Model.TotalCount</span>
                    </a>

                    @foreach (var category in Model.Categories.Where(c => c.IdCategory > 0))
                    {
                        <a asp-controller="Products" asp-action="Index"
                           asp-route-categoryId="@category.IdCategory"
                           class="category-filter-card @(Model.SelectedCategoryId == category.IdCategory ? "active" : "")">
                            <div class="category-filter-icon">
                                <i class="@GetCategoryIcon(category.NameCa)" style="color: #ec407a;"></i>
                            </div>
                            <span>@category.NameCa</span>
                            <span class="category-count">@category.ProductCount</span>
                        </a>
                    }
                </div>
            </div>

            <div class="search-sort">
                <form method="get" class="search-form">
                    <div class="search-box">
                        <input type="text" name="search" placeholder="Поиск товаров..." value="@Model.SearchTerm">
                        <button type="submit" class="search-icon">
                            <i class="fas fa-search" style="color: #ec407a;"></i>
                        </button>
                    </div>
                    @if (Model.SelectedCategoryId > 0)
                    {
                        <input type="hidden" name="categoryId" value="@Model.SelectedCategoryId" />
                    }
                </form>

                <div class="sort-container">
                    <i class="fas fa-sort me-2" style="color: #ec407a;"></i>
                    <select id="sortSelect" class="sort-select">
                        <option value="name">По названию</option>
                        <option value="price-low">Сначала дешевые</option>
                        <option value="price-high">Сначала дорогие</option>
                        <option value="brand">По бренду</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="products-section">
    <div class="container">
        <div class="products-header">
            <h2><i class="fas fa-cube me-2" style="color: #ec407a;"></i>Найдено товаров: <span id="productsCount">@Model.Products.Count</span></h2>

            @if (Model.TotalPages > 1)
            {
                <div class="pagination">
                    @if (Model.CurrentPage > 1)
                    {
                        <a asp-controller="Products" asp-action="Index"
                           asp-route-categoryId="@Model.SelectedCategoryId"
                           asp-route-search="@Model.SearchTerm"
                           asp-route-page="@(Model.CurrentPage - 1)"
                           class="pagination-btn">
                            <i class="fas fa-chevron-left me-1"></i>Назад
                        </a>
                    }

                    <span class="pagination-info">
                        <i class="fas fa-file-alt me-1"></i>Страница @Model.CurrentPage из @Model.TotalPages
                    </span>

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <a asp-controller="Products" asp-action="Index"
                           asp-route-categoryId="@Model.SelectedCategoryId"
                           asp-route-search="@Model.SearchTerm"
                           asp-route-page="@(Model.CurrentPage + 1)"
                           class="pagination-btn">
                            Далее<i class="fas fa-chevron-right ms-1"></i>
                        </a>
                    }
                </div>
            }
        </div>

        <div class="products-grid" id="productsGrid">
            @foreach (var product in Model.Products)
            {
                <div class="product-card" data-category="@product.CategoryId"
                     data-name="@product.NamePr.ToLower()"
                     data-brand="@product.BrandPr.ToLower()"
                     data-price="@product.Price">

                    <div class="product-image">
                        <div class="product-badge @product.StockStatusClass">
                            <i class="@GetStockIcon(product.StockStatus) me-1"></i>@product.StockStatus
                        </div>
                        <div class="product-actions">
                            <button class="wishlist-btn" data-product-id="@product.IdProduct">
                                <i class="far fa-heart"></i>
                            </button>
                            <a asp-controller="Products" asp-action="Details" asp-route-id="@product.IdProduct"
                               class="quick-view-btn">
                                <i class="fas fa-eye"></i>
                            </a>
                        </div>
                    </div>

                    <div class="product-info">
                        <span class="product-brand">
                            <i class="fas fa-tag me-1" style="color: #ec407a;"></i>@product.BrandPr
                        </span>
                        <h3 class="product-name">
                            <a asp-controller="Products" asp-action="Details" asp-route-id="@product.IdProduct">
                                @product.NamePr
                            </a>
                        </h3>
                        <p class="product-description">
                            @(product.DescriptionPr.Length > 100 ?
                                                    product.DescriptionPr.Substring(0, 100) + "..." :
                                                    product.DescriptionPr)
                    </p>
                    <div class="product-price">
                        <i class="fas fa-ruble-sign me-1" style="opacity: 0.7;"></i>@product.FormattedPrice
                    </div>

                        <div class="product-meta">
                            <span class="product-category">
                                <i class="@GetCategoryIcon(product.CategoryName) me-1" style="color: #ec407a;"></i>
                                @product.CategoryName
                            </span>
                        @if (product.StockQuantity > 0)
                            {
                                <span class="product-stock">
                                    <i class="fas fa-box me-1" style="color: #4CAF50;"></i>Осталось: @product.StockQuantity
                                </span>
                            }
                        </div>

                        <form asp-controller="Cart" asp-action="Add" method="post" class="w-100">
                            <input type="hidden" name="productId" value="@product.IdProduct" />
                            <input type="hidden" name="name" value="@product.NamePr" />
                            <input type="hidden" name="price" value="@product.Price" />
                            <input type="hidden" name="quantity" value="1" />

                            <button type="submit" class="add-to-cart-btn @(product.StockQuantity == 0 ? "disabled" : "")"
                                    data-product-id="@product.IdProduct"
                                    @(product.StockQuantity == 0 ? "disabled" : "")>
                                <span>@(product.StockQuantity == 0 ? "Нет в наличии" : "В корзину")</span>
                                <div class="cart-icon">
                                    @if (product.StockQuantity == 0)
                                    {
                                        <i class="fas fa-times"></i>
                                    }
                                    else
                                    {
                                        <i class="fas fa-shopping-cart"></i>
                                    }
                                </div>
                            </button>
                        </form>
                    </div>
                </div>
            }
        </div>

        @if (!Model.Products.Any())
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-search" style="font-size: 4rem; color: #ec407a;"></i>
                </div>
                <h3>Товары не найдены</h3>
                <p>Попробуйте изменить параметры поиска или выбрать другую категорию</p>
                <a asp-controller="Products" asp-action="Index" class="reset-filters-btn">
                    <i class="fas fa-redo me-2"></i>Сбросить фильтры
                </a>
            </div>
        }

        @if (Model.TotalPages > 1)
        {
            <div class="pagination-bottom">
                <div class="pagination">
                    @if (Model.CurrentPage > 1)
                    {
                        <a asp-controller="Products" asp-action="Index"
                           asp-route-categoryId="@Model.SelectedCategoryId"
                           asp-route-search="@Model.SearchTerm"
                           asp-route-page="@(Model.CurrentPage - 1)"
                           class="pagination-btn">
                            <i class="fas fa-chevron-left me-1"></i>Назад
                        </a>
                    }

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <a asp-controller="Products" asp-action="Index"
                           asp-route-categoryId="@Model.SelectedCategoryId"
                           asp-route-search="@Model.SearchTerm"
                           asp-route-page="@i"
                           class="pagination-btn @(i == Model.CurrentPage ? "active" : "")">
                            @i
                        </a>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <a asp-controller="Products" asp-action="Index"
                           asp-route-categoryId="@Model.SelectedCategoryId"
                           asp-route-search="@Model.SearchTerm"
                           asp-route-page="@(Model.CurrentPage + 1)"
                           class="pagination-btn">
                            Далее<i class="fas fa-chevron-right ms-1"></i>
                        </a>
                    }
                </div>
            </div>
        }
    </div>
</section>

@functions {
    public string GetCategoryIcon(string categoryName)
    {
        return categoryName?.ToLower() switch
        {
            "декоративная косметика" or "макияж" => "fas fa-palette",
            "уход за кожей" or "косметика" => "fas fa-spa",
            "парфюмерия" or "ароматы" => "fas fa-wind",
            "волосы" or "уход за волосами" => "fas fa-cut",
            "бренд" or "бренды" => "fas fa-crown",
            "акции" or "скидки" => "fas fa-percentage",
            "новинки" => "fas fa-star",
            _ => "fas fa-cube"
        };
    }

    public string GetStockIcon(string stockStatus)
    {
        return stockStatus?.ToLower() switch
        {
            "в наличии" => "fas fa-check-circle",
            "мало" => "fas fa-exclamation-triangle",
            "нет в наличии" => "fas fa-times-circle",
            "ожидается" => "fas fa-clock",
            _ => "fas fa-box"
        };
    }
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const sortSelect = document.getElementById('sortSelect');
            const productsGrid = document.getElementById('productsGrid');

            sortSelect.addEventListener('change', function() {
                sortProducts(this.value);
            });

            function sortProducts(sortBy) {
                const container = productsGrid;
                const items = Array.from(container.querySelectorAll('.product-card'));

                items.sort((a, b) => {
                    const aPrice = parseFloat(a.getAttribute('data-price'));
                    const bPrice = parseFloat(b.getAttribute('data-price'));
                    const aName = a.getAttribute('data-name');
                    const bName = b.getAttribute('data-name');
                    const aBrand = a.getAttribute('data-brand');
                    const bBrand = b.getAttribute('data-brand');

                    switch (sortBy) {
                        case 'name':
                            return aName.localeCompare(bName);
                        case 'price-low':
                            return aPrice - bPrice;
                        case 'price-high':
                            return bPrice - aPrice;
                        case 'brand':
                            return aBrand.localeCompare(bBrand);
                        default:
                            return 0;
                    }
                });

                items.forEach(item => container.appendChild(item));
            }

            const addToCartForms = document.querySelectorAll('form[asp-controller="Cart"]');
            addToCartForms.forEach(form => {
                form.addEventListener('submit', async function(e) {
                    e.preventDefault();

                    const formData = new FormData(this);
                    const submitBtn = this.querySelector('.add-to-cart-btn');

                    if (submitBtn.disabled) return;

                    try {
                        const response = await fetch(this.action, {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest',
                            },
                            body: formData
                        });

                        const result = await response.json();

                        if (result.success) {
                            const originalHTML = submitBtn.innerHTML;
                            submitBtn.innerHTML = '<span>Добавлено!</span><div class="cart-icon"><i class="fas fa-check"></i></div>';
                            submitBtn.style.background = 'linear-gradient(45deg, #4CAF50, #45a049)';

                            updateCartCount(result.cartCount);

                            setTimeout(() => {
                                submitBtn.innerHTML = originalHTML;
                                submitBtn.style.background = '';
                            }, 2000);
                        }
                    } catch (error) {
                        console.error('Ошибка добавления в корзину:', error);
                    }
                });
            });

            function updateCartCount(count) {
                const cartCounter = document.querySelector('.cart-count');
                if (cartCounter) {
                    cartCounter.textContent = count;
                    cartCounter.style.display = count > 0 ? 'inline' : 'none';
                }
            }

            fetch('/Cart/GetCartCount')
                .then(response => response.json())
                .then(data => {
                    updateCartCount(data.count);
                });

            const wishlistBtns = document.querySelectorAll('.wishlist-btn');
            wishlistBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const productId = this.getAttribute('data-product-id');
                    const icon = this.querySelector('i');

                    if (icon.classList.contains('far')) {
                        icon.classList.remove('far');
                        icon.classList.add('fas');
                        icon.style.color = '#ec407a';
                    } else {
                        icon.classList.remove('fas');
                        icon.classList.add('far');
                        icon.style.color = '';
                    }

                    console.log(`Товар ${productId} добавлен в избранное`);
                });
            });
        });
    </script>
}